name: Update RSS from WebDAV

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Cache rclone
      uses: actions/cache@v4
      with:
        path: /usr/local/bin/rclone
        key: rclone-v1.71.0
        
    - name: Install dependencies
      run: |
        pip install zstandard
        
        # 检查 rclone 是否已缓存
        if [ ! -f "/usr/local/bin/rclone" ]; then
          echo "Installing rclone..."
          curl https://rclone.org/install.sh | sudo bash
        else
          echo "Using cached rclone"
        fi
        
    - name: Configure rclone
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        # 从 WEBDAV_URL 中解析基础 URL 和路径（不打印到日志）
        BASE_URL=$(echo "${WEBDAV_URL}" | sed 's|\(https://[^/]*\).*|\1|')
        WEBDAV_PATH=$(echo "${WEBDAV_URL}" | sed 's|https://[^/]*||')
        
        # 创建 rclone 配置
        mkdir -p ~/.config/rclone
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${BASE_URL}
        vendor = other
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        # 测试连接（不显示详细路径）
        echo "Testing WebDAV connection..."
        if rclone lsd webdav:${WEBDAV_PATH} >/dev/null 2>&1; then
          echo "✓ Connection successful"
        else
          echo "✗ Connection failed"
          exit 1
        fi
        
        # 导出变量供后续步骤使用
        echo "WEBDAV_PATH=${WEBDAV_PATH}" >> $GITHUB_ENV
        
    - name: Sync files from WebDAV
      run: |
        # 同步 db_storage 目录
        echo "Syncing database files..."
        rclone sync webdav:${WEBDAV_PATH}/db_storage ./db_storage --include "*.db" --progress
        
        # 统计下载的文件数量（不显示具体路径）
        DB_COUNT=$(find db_storage -name "*.db" -type f | wc -l)
        echo "Downloaded ${DB_COUNT} database files"
        
    - name: Run db2rss.py
      run: |
        python db2rss.py
        
        # 统计生成的 RSS 文件数量
        RSS_COUNT=$(find source_xml -name "*.xml" -type f 2>/dev/null | wc -l || echo "0")
        echo "Generated ${RSS_COUNT} RSS files"
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add source_xml/
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update RSS feeds [skip ci]"
          git push
        fi

