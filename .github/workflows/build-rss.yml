name: Update RSS from WebDAV

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install zstandard
        curl https://rclone.org/install.sh | sudo bash
        
    - name: Configure rclone
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        # 从 WEBDAV_URL 中解析基础 URL 和路径
        # 例如: https://openapi.alipan.com/dav/wxid_dfsdf
        BASE_URL=$(echo "${WEBDAV_URL}" | sed 's|\(https://[^/]*\).*|\1|')
        WEBDAV_PATH=$(echo "${WEBDAV_URL}" | sed 's|https://[^/]*||')
        
        echo "Base URL: ${BASE_URL}"
        echo "WebDAV Path: ${WEBDAV_PATH}"
        
        # 创建 rclone 配置
        mkdir -p ~/.config/rclone
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${BASE_URL}
        vendor = other
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        # 测试连接
        echo "=== Testing connection ==="
        rclone lsd webdav:${WEBDAV_PATH} -v
        
        # 导出变量供后续步骤使用
        echo "WEBDAV_PATH=${WEBDAV_PATH}" >> $GITHUB_ENV
        
    - name: Sync files from WebDAV
      run: |
        # 列出 db_storage 目录
        echo "Listing db_storage directory:"
        rclone ls webdav:${WEBDAV_PATH}/db_storage --max-depth 3 -v
        
        # 同步 db_storage 目录
        echo "Syncing db_storage..."
        rclone sync webdav:${WEBDAV_PATH}/db_storage ./db_storage -v --include "*.db"
        
        # 列出下载的文件
        echo "Downloaded files:"
        find db_storage -name "*.db" -type f
        
    - name: Run db2rss.py
      run: |
        python db2rss.py
        
        echo "Generated RSS files:"
        ls -la source_xml/ || echo "No RSS files generated"
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add source_xml/
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update RSS feeds [skip ci]"
          git push
        fi

