name: Update RSS from WebDAV

on:
  schedule:
    - cron: '*/15 * * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        
    - name: Cache rclone
      uses: actions/cache@v4
      with:
        path: ~/.local/bin/rclone
        key: rclone-${{ runner.os }}-v1.71.0
        
    - name: Install dependencies
      run: |
        pip install zstandard
        
        if [ ! -f "$HOME/.local/bin/rclone" ]; then
          echo "Installing rclone..."
          mkdir -p ~/.local/bin
          curl -O https://downloads.rclone.org/rclone-current-linux-amd64.zip
          unzip -q rclone-current-linux-amd64.zip
          cp rclone-*/rclone ~/.local/bin/
          chmod +x ~/.local/bin/rclone
          rm -rf rclone-*
        fi
        
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Configure rclone
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        BASE_URL=$(echo "${WEBDAV_URL}" | sed 's|\(https://[^/]*\).*|\1|')
        WEBDAV_PATH=$(echo "${WEBDAV_URL}" | sed 's|https://[^/]*||')
        
        mkdir -p ~/.config/rclone
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${BASE_URL}
        vendor = other
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        echo "WEBDAV_PATH=${WEBDAV_PATH}" >> $GITHUB_ENV
        
    - name: Sync files from WebDAV
      run: |
        rclone sync webdav:${WEBDAV_PATH}/db_storage ./db_storage --include "*.db"
        
    - name: Run db2rss.py
      run: python db2rss.py
      
    - name: Generate feeds.txt
      run: |
        # 生成 feeds.txt 文件
        # 遍历 source_xml 目录中的所有 .xml 文件
        if [ -d "source_xml" ]; then
          find source_xml -name "*.xml" -type f | sort | while read -r file; do
            filename=$(basename "$file")
            echo "https://raw.githubusercontent.com/${{ github.repository }}/refs/heads/${{ github.ref_name }}/source_xml/${filename}" >> feeds.txt
          done
        fi
        
        # 显示生成的文件数量
        FEED_COUNT=$(grep -c "^https://" feeds.txt || echo "0")
        echo "Generated feeds.txt with ${FEED_COUNT} RSS feeds"
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add source_xml/ feeds.txt
        
        if ! git diff --staged --quiet; then
          git commit -m "Update RSS feeds [skip ci]"
          git push
        fi

