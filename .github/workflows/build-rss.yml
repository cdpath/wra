name: Update RSS from WebDAV

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-rss:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        pip install zstandard
        # 安装 rclone
        curl https://rclone.org/install.sh | sudo bash
        
    - name: Debug WebDAV connection
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        # 先用 curl 测试连接
        echo "Testing with curl first..."
        curl -u "${WEBDAV_USER}:${WEBDAV_PASS}" \
          -X PROPFIND \
          -H "Depth: 1" \
          "${WEBDAV_URL}" \
          -s | head -20
        
        echo ""
        echo "Testing db_storage path..."
        curl -u "${WEBDAV_USER}:${WEBDAV_PASS}" \
          -X PROPFIND \
          -H "Depth: 1" \
          "${WEBDAV_URL}/db_storage/" \
          -s | head -20
        
    - name: Configure and test rclone
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        # 创建 rclone 配置 - 尝试不同的配置
        mkdir -p ~/.config/rclone
        
        # 配置1: 标准配置
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${WEBDAV_URL}
        vendor = other
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        echo "=== Testing standard config ==="
        rclone lsd webdav: --dump headers 2>&1 | head -50 || true
        echo ""
        
        # 配置2: 添加尾部斜杠
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${WEBDAV_URL}/
        vendor = other
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        echo "=== Testing with trailing slash ==="
        rclone lsd webdav: -vv 2>&1 | head -50 || true
        echo ""
        
        # 尝试列出 db_storage
        echo "=== Trying to list db_storage ==="
        rclone ls webdav:db_storage -vv 2>&1 | head -50 || true
        echo ""
        
        # 尝试使用不同的 vendor
        cat > ~/.config/rclone/rclone.conf <<EOF
        [webdav]
        type = webdav
        url = ${WEBDAV_URL}
        vendor = nextcloud
        user = ${WEBDAV_USER}
        pass = $(rclone obscure ${WEBDAV_PASS})
        EOF
        
        echo "=== Testing with nextcloud vendor ==="
        rclone lsd webdav: -vv 2>&1 | head -50 || true
        
    - name: Try different rclone approaches
      env:
        WEBDAV_URL: ${{ secrets.WEBDAV_URL }}
        WEBDAV_USER: ${{ secrets.WEBDAV_USER }}
        WEBDAV_PASS: ${{ secrets.WEBDAV_PASS }}
      run: |
        # 尝试直接使用命令行参数
        echo "=== Using command line parameters ==="
        rclone lsd :webdav: \
          --webdav-url="${WEBDAV_URL}" \
          --webdav-vendor=other \
          --webdav-user="${WEBDAV_USER}" \
          --webdav-pass="$(rclone obscure ${WEBDAV_PASS})" \
          -vv 2>&1 | head -50 || true
        
        echo ""
        echo "=== Trying to list with full path ==="
        rclone ls :webdav:db_storage \
          --webdav-url="${WEBDAV_URL}" \
          --webdav-vendor=other \
          --webdav-user="${WEBDAV_USER}" \
          --webdav-pass="$(rclone obscure ${WEBDAV_PASS})" \
          -vv 2>&1 | head -50 || true

